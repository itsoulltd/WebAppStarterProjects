version: '3.5'

networks:
   web-app-net:
       name: my-web-app-net
       #driver: overlay
       driver: bridge

volumes:
   mongo-db-storage:

services:
   mongo-db:
     image: mongo:latest
     ports:
       - 27017:27017
     environment:
       MONGO_INITDB_ROOT_USERNAME: root
       MONGO_INITDB_ROOT_PASSWORD: example
       MONGO_INITDB_DATABASE: testDB
     restart: on-failure
     networks:
       - web-app-net
     volumes:
       - mongo-db-storage:/data/db

   mongo-express:
     image: mongo-express:latest
     ports:
       - 8081:8081
     environment:
       ME_CONFIG_MONGODB_SERVER: mongo-db
       ME_CONFIG_MONGODB_PORT: 27017
       ME_CONFIG_MONGODB_ENABLE_ADMIN: true
       ME_CONFIG_MONGODB_AUTH_DATABASE: admin
       ME_CONFIG_MONGODB_ADMINUSERNAME: root
       ME_CONFIG_MONGODB_ADMINPASSWORD: example
       ME_CONFIG_BASICAUTH_USERNAME: dev
       ME_CONFIG_BASICAUTH_PASSWORD: devpass
     restart: on-failure
     depends_on:
       - mongo-db
     networks:
       - web-app-net

   webapp:
     image: spring-microservice-with-mongo-starter:1.0
     build:
       context: .
       #dockerfile: Dockerfile
       dockerfile: Dockerfile-embedded
     environment:
       mongo.db.name: testDB
       mongo.db.host: mongo-db
       mongo.db.port: 27017
       mongo.db.username: root
       mongo.db.password: example
       management.endpoints.web.exposure.include: health,metrics,httptrace,prometheus
     ports:
       - 8080:8080
     depends_on:
       - mongo-db
     restart: on-failure
     networks:
       - web-app-net

##End of Scripts