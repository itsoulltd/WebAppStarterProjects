<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.infoworks.lab</groupId>
	<artifactId>vaadin-flow-spring-startup-12</artifactId>
	<name>vaadin-flow-spring-startup-12</name>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<vaadin.version>19.0.5</vaadin.version>
        <jersey2.version>2.27</jersey2.version>
        <jaxrs.version>2.1</jaxrs.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
	</parent>

	<pluginRepositories>
		<!-- Repository needed for prerelease versions of Vaadin -->
		<pluginRepository>
			<id>vaadin-prereleases</id>
			<url>https://maven.vaadin.com/vaadin-prereleases</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<!-- Repository needed for prerelease versions of Vaadin -->
		<repository>
			<id>vaadin-prereleases</id>
			<url>https://maven.vaadin.com/vaadin-prereleases</url>
		</repository>
		<!-- Repository used by many Vaadin add-ons -->
		<repository>
			<id>Vaadin Directory</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<!-- JitPack -->
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-login-flow</artifactId>
            <version>1.0.0</version>
        </dependency>
		<!-- Map-GeoLocation Dependencies -->
        <dependency>
			<groupId>org.webjars.bowergithub.googlewebcomponents</groupId>
			<artifactId>google-map</artifactId>
			<version>2.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.google.maps</groupId>
			<artifactId>google-maps-services</artifactId>
			<version>0.10.2</version>
		</dependency>
		<dependency>
			<groupId>ch.hsr</groupId>
			<artifactId>geohash</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!-- -->
		<!-- WebComponentKits -->
		<dependency>
			<groupId>com.github.itsoulltd</groupId>
			<artifactId>JSQLEditor</artifactId>
			<version>1.1.3.2-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.18</version>
		</dependency>
		<dependency>
			<groupId>com.github.itsoulltd.WebComponentKit</groupId>
			<artifactId>http-rest-client</artifactId>
			<version>v1.10.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.github.itsoulltd.WebComponentKit</groupId>
			<artifactId>jsql-editor-components</artifactId>
			<version>v1.10.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.github.itsoulltd.WebComponentKit</groupId>
			<artifactId>jjwt-web-token</artifactId>
			<version>v1.10.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.github.itsoulltd.WebComponentKit</groupId>
			<artifactId>vaadin-component</artifactId>
			<version>v1.3.10-VAADIN</version>
		</dependency>
		<!-- -->
        <!-- JAX-RS -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${jaxrs.version}</version>
        </dependency>
        <!-- Jersey-2 client: for consuming web-services -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>2.9.9</version>
        </dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1.4</version>
		</dependency>
        <!-- Jersey-2 bundle ends -->
        <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.1.0.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-websocket -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>5.0.4.RELEASE</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-messaging -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>5.0.4.RELEASE</version>
        </dependency>

	</dependencies>

	<build>
		<finalName>ROOT</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Production mode can be activated with either property or profile -->
			<id>production-mode</id>
			<activation>
				<property>
					<name>vaadin.productionMode</name>
				</property>
			</activation>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-server-production-mode</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>${vaadin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>copy-production-files</goal>
									<goal>package-for-production</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>-Dvaadin.productionMode</jvmArguments>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<webAppConfig>
								<resourceBases>
									<resourceBase>${transpilation.output}</resourceBase>
								</resourceBases>
							</webAppConfig>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>